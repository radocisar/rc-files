# These are VS Code Keyboard Shortcuts
[
    {
        "key": "gg",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && vim.mode == 'Insert'"
    },
    {
        "key": "gg",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
    },
    {
        "key": "gg",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && vim.mode == 'Visual'"
    },
    {
        "key": "gg",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && vim.mode == 'Replace'"
    },
    {
    "key": "y y",
    "command": "notebook.cell.copy",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
    "key": "p",
    "command": "notebook.cell.paste",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    // {
    //     "key": "backspace",
    //     "command": "-deleteLeft",
    //     "when": "textInputFocus && !editorReadonly"
    // },
    {
        "key": "shift+enter",
        "command": "jupyter.runFileInteractive",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "python.execInTerminal",
        "when": "textInputFocus && !editorReadonly && resourceExtname == .py"
    },
    {
        "key": "ctrl+backspace",
        "command": "-workbench.action.terminal.deleteWordLeft",
        "when": "terminalFocus"
    },
    // {
    //     "key": "backspace",
    //     "command": "deleteLeft",
    //     "when": "textInputFocus && !editorReadonly"
    // },
    {
        "key": "shift+backspace",
        "command": "-deleteLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+enter",
        "command": "python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "jupyter.runcurrentcell",
        "when": "editorTextFocus && jupyter.featureenabled && jupyter.hascodecells && !editorHasSelection"
    },
    {
        "key": "ctrl+enter",
        "command": "-jupyter.runcurrentcell",
        "when": "editorTextFocus && jupyter.featureenabled && jupyter.hascodecells && !editorHasSelection"
    },
    {
        "key": "ctrl+alt+m",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+space shift+5",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+space shift+5",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "ctrl+space shift+'",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "ctrl+space l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+space h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+space k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+space j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+space t",
        "command": "workbench.action.createTerminalEditor"
    },
    {
        "key": "ctrl+space c",
        "command": "welcome.showNewFileEntries"
    },
    {
        "key": "ctrl+alt+win+n",
        "command": "-welcome.showNewFileEntries"
    },
    {
        "key": "ctrl+m",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
    },
    {
        "key": "escape",
        "command": "-notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
    }
]
